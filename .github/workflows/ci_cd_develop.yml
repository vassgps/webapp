name: CI/CD Develop

on:
  push:
    branches:
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        run: echo "Checked out the code."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        run: echo "Docker Buildx set up completed."

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "Logged in to Docker Hub."

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        run: echo "QEMU set up completed."

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./app
          push: true
          tags: vassgps/webapp:develop
        run: echo "Docker image built and pushed to Docker Hub with tag 'vassgps/webapp:develop'."

      - name: Log out of Docker Hub
        run: |
          docker logout
          echo "Logged out of Docker Hub."


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Install SSH client
        run: |
          sudo apt-get install -y openssh-client
          echo "SSH client installed."

      - name: Connect to AWS server and pull latest Docker image
        env:
          PASSWORD: ${{ secrets.AWS_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "Connecting to AWS server using password..."
          
          sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no vass@3.7.222.237 << EOF
            echo "Logged in to AWS server."
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            echo "Logged in to Docker Hub on AWS server."
            docker pull vassgps/webapp:develop
            echo "Docker image 'vassgps/webapp:develop' pulled successfully."
            docker stop djangoapp || true
            echo "Existing container stopped (if it was running)."
            docker rm djangoapp || true
            echo "Existing container removed (if it was present)."
            docker run -d --name djangoapp -p 8000:8000 vassgps/webapp:develop
            echo "New container started with the latest image."
            docker logout
            echo "Logged out of Docker Hub on AWS server."
          EOF

